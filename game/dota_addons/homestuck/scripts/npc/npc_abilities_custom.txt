// Dota Heroes File
"DOTAAbilities"
{
	"Version"		"1"
	
	"grist_movement_passive"
	{
		"BaseClass"						"ability_datadriven"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN"
		"Modifiers"
		{
			"grist_movement_modifier"
			{
				"Passive"	"1"
				"IsHidden"	"1"
				"ThinkInterval"	"0.03"
				"OnIntervalThink"
				{
					"RunScript"
					{
						"ScriptFile"	"scripts/vscripts/internal/grist/movement.lua"
						"Function"		"Movement"
					}
				}
				"States"
				{
					"MODIFIER_STATE_UNSELECTABLE"
				}
			}
		}
	}
	//=================================================================================================================
	// Terezi Pyrope: Coin Flip
	//=================================================================================================================
	"terezi_pyrope_coin_flip"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		"BaseClass" 					"ability_lua"
		"AbilityTextureName"			"terezi_pyrope_coin_flip"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_IMMEDIATE | DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_AUTOCAST"
		// Time		
		//-------------------------------------------------------------------------------------------------------------

		// Cost
		//-------------------------------------------------------------------------------------------------------------
		"AbilityManaCost"				"20.0 30.0 40.0 50.0"
		"AbilityCooldown"				"8.0 7.0 5.0 2.0"
		"ScriptFile"					"heroes/terezi/terezi_pyrope_coin_flip"
		"AbilitySpecial"
		{
			"01"
			{
				"VAR_TYPE"		"FIELD_INTEGER"
				"HeadsDamage"	"50.0 60.0 80.0 110.0"
			}
			"02"
			{
				"VAR_TYPE"		"FIELD_FLOAT"
				"SlowTime"		"0.25 0.5 0.75 1.0"
			}
		}
	}
	//=================================================================================================================
	// Terezi Pyrope: Sniff
	//=================================================================================================================
	"terezi_pyrope_sniff"
	{
		"BaseClass"					"ability_lua"
		"AbilityTextureName"		"terezi_pyrope_sniff"
		"AbilityBehavior"			"DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_IMMEDIATE"
		"AbilityCooldown"			"20.0 18.0 15.0 10.0"
		"AbilityManaCost"			"50.0 60.0 70.0 80.0"
		"ScriptFile"				"heroes/terezi/terezi_pyrope_sniff"
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"		"FIELD_INTEGER"
				"sniff_range"	"500 750 1000 1250"
			}
			"02"
			{
				"var_type"		"FIELD_INTEGER"
				"duration"		"5"
			}
		}
	}
	//=================================================================================================================
	// Terezi Pyrope: JUST1C3
	//=================================================================================================================
	"terezi_pyrope_justice"
	{
		"BaseClass"					"ability_lua"
		"AbilityTextureName"		"terezi_pyrope_justice"
		"AbilityBehavior"			"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		"ScriptFile"				"heroes/terezi/terezi_pyrope_justice"
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"		"FIELD_INTEGER"
				"max_mult"		"5 6 7 8"
			}
			"02"
			{
				"var_type"		"FIELD_INTEGER"
				"stack_speed"	"15 20 25 30"
			}
		}
	}
	//=================================================================================================================
	// Terezi Pyrope: Seer of Mind
	//=================================================================================================================
	
	"terezi_pyrope_seer_of_mind"
	{
		"BaseClass"					"ability_lua"
		"AbilityTextureName"		"terezi_pyrope_seer_of_mind"
		"ScriptFile"				"heroes/terezi/terezi_pyrope_seer_of_mind"
		"AbilityBehavior"			"DOTA_ABILITY_BEHAVIOR_CHANNELLED | DOTA_ABILITY_BEHAVIOR_NO_TARGET"
		"AbilityType"				"DOTA_ABILITY_TYPE_ULTIMATE"
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"			"FIELD_INTEGER"
				"standard_length"	"2"
			}
			"02"
			{
				"var_type"			"FIELD_INTEGER"
				"aghs_length"		"5"
			}
		}
	}
	//=================================================================================================================
	// Dirk Strider: Sick Rhymes
	//=================================================================================================================
	
	"dirk_strider_rap_battle"
	{
		"BaseClass"					"ability_datadriven"
		"AbilityTextureName"		"dirk_strider_rap_battle"
		"AbilityBehavior"			"DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING | DOTA_ABILITY_BEHAVIOR_POINT | DOTA_ABILITY_BEHAVIOR_DIRECTIONAL"
		"SpellImmunityType"			"SPELL_IMMUNITY_ENEMIES_NO"
		"AbilityUnitDamageType"		"DAMAGE_TYPE_MAGICAL"
		"AbilityCooldown"			"12.0 12.0 12.0 12.0"
		"AbilityManaCost"			"50.0 50.0 50.0 50.0"
		"AbilityCastRange"			"0"
		"precache"
		{
			"particle"			"particles/units/heroes/hero_mirana/mirana_spell_arrow.vpcf"
		}
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"			"FIELD_INTEGER"
				"rap_time"			"5.0"
			}
			"02"
			{
				"var_type"				"FIELD_FLOAT"
				"orange_soda_coat_time"	"8.0"
			}
			"03"
			{
				"var_type"				"FIELD_INTEGER"
				"orange_soda_radius"	"150"
			}
			"04"
			{
				"var_type"			"FIELD_FLOAT"
				"orange_soda_speed"	"1200.0"
			}
			"04"
			{
				"var_type"			"FIELD_FLOAT"
				"orange_soda_width"	"60.0"
			}
			"05"
			{
				"var_type"			"FIELD_FLOAT"
				"orange_soda_range"	"1000.0"
			}
			"06"
			{
				"var_type"					"FIELD_INTEGER"
				"orange_soda_magic_resist"	"-10 -20 -30 -40"
			}
			"07"
			{
				"var_type"					"FIELD_INTEGER"
				"orange_soda_miss_percent"	"15 20 25 30"
			}
		}
		
		"OnSpellStart"
		{
			"LinearProjectile"
			{
				"Target"			"POINT"
				"EffectName"		"particles/units/heroes/hero_mirana/mirana_spell_arrow.vpcf" //Temporary!
				"MoveSpeed"			"%orange_soda_speed"
				"StartRadius"		"%orange_soda_width"
				"EndRadius"			"%orange_soda_width"
				"FixedDistance"		"%orange_soda_range"
				"TargetTeams"		"DOTA_UNIT_TARGET_TEAM_ENEMY"
				"TargetTypes"		"DOTA_UNIT_TARGET_BASIC | DOTA_UNIT_TARGET_HERO"
				"TargetFlags"		"DOTA_UNIT_TARGET_FLAG_NONE"
				"HasFrontalCone"	"0"
				"ProvidesVision"	"0"
			}
			"RunScript"
			{
				"ScriptFile"	"scripts/vscripts/heroes/dirk/rap_battle.lua"
				"Function"		"SickRaps"
			}
		}
		"OnProjectileHitUnit"
		{
			"ActOnTargets"
			{
				"Target"
				{
					"Center"	"POINT"
					"Radius"	"%orange_soda_radius"
					"Teams"		"DOTA_UNIT_TARGET_TEAM_ENEMY"
					"Types"		"DOTA_UNIT_TARGET_BASIC | DOTA_UNIT_TARGET_HERO"
				}
				"Action"
				{
					"ApplyModifier"
					{
						"ModifierName"		"modifier_orange_soda_datadriven"
						"Target"			"TARGET"
					}
				}
			}
		}
		"Modifiers"
		{
			"modifier_orange_soda_datadriven"
			{
				"Duration"		"%orange_soda_coat_time"
				"IsDebuff"		"1"
				"Properties"
				{
					"MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BONUS"	"%orange_soda_magic_resist"
					"MODIFIER_PROPERTY_MISS_PERCENTAGE"				"%orange_soda_miss_percent"
				}
			}
		}
	}
	//=================================================================================================================
	// Dirk Strider: Glorious Nippon Steel
	//=================================================================================================================	
	"dirk_strider_unbreakable_katana"
	{
		"BaseClass"					"ability_datadriven"
		"AbilityTextureName"		"dirk_strider_unbreakable_katana"
		"AbilityBehavior"			"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"		"FIELD_INTEGER"
				"armor_reduce"	"-1 -3 -5 -7"
			}
			"02"
			{
				"var_type"		"FIELD_FLOAT"
				"duration"		"1.0"
			}
		}
		"Modifiers"
		{
			"modifier_unbreakable_katana_passive"
			{
				"Passive"		"1"
				"IsHidden"		"1"
				"OnAttackStart"
				{
					"ApplyModifier"
					{
						"Target"		"TARGET"
						"ModifierName"	"modifier_unbreakable_katana_armor_reduction"
					}
				}
			}
			"modifier_unbreakable_katana_armor_reduction"
			{
				"Duration"		"%duration"
				"IsDebuff"		"1"
				"IsHidden"		"1"
				"Properties"
				{
					"MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS"	"%armor_reduce"
				}
			}
		}
	}
	
	//=================================================================================================================
	// Dirk Strider: Split Self
	//=================================================================================================================	
	
	"dirk_strider_issues_of_self"
	{
		"BaseClass"					"ability_lua"
		"AbilityTextureName"		"dirk_strider_issues_of_self"
		"ScriptFile"				"heroes/dirk/issues_of_self"
		"AbilityBehavior"			"DOTA_ABILITY_BEHAVIOR_UNIT_TARGET | DOTA_ABILITY_BEHAVIOR_UNRESTRICTED"
	}
	
	//=================================================================================================================
	// Dirk Strider: Prince of Heart
	//=================================================================================================================	
	
	"dirk_strider_prince_of_heart"
	{
		"BaseClass"								"ability_datadriven"
		"AbilityTextureName"					"dirk_strider_prince_of_heart"
		"AbilityBehavior"						"DOTA_ABILITY_BEHAVIOR_CHANNELLED | DOTA_ABILITY_BEHAVIOR_UNIT_TARGET"
		"AbilityUnitTargetTeam"					"DOTA_UNIT_TARGET_TEAM_ENEMY"
		"AbilityUnitTargetType"					"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC"
		"AbilityType"							"DOTA_ABILITY_TYPE_ULTIMATE"
		"AbilityCastPoint"						"1.5 1.5 1.5"
		"AbilityCastRange"						"500 500 500"
		"AbilityManaCost"						"100 100 100"
		"AbilityChannelledManaCostPerSecond"	"50 50 50"
		"AbilityCooldown"						"60 45 30"
		"AbilityChannelTime"					"120"
		"AbilitySpecial"
		{
			"01"
			{
				"var_type"			"FIELD_INTEGER"
				"dam_per_sec"		"100 150 200"
			}
		}
		"OnSpellStart"
		{
			"ApplyModifier"
			{
				"ModifierName"		"modifier_prince_of_heart_datadriven"
				"Target"			"TARGET"
			}
		}
		"OnChannelInterrupted"
		{
			"RemoveModifier"
			{
				"ModifierName"		"modifier_prince_of_heart_datadriven"
				"Target"			"TARGET"
			}
		}
		"OnChannelFinish"
		{
			"RemoveModifier"
			{
				"ModifierName"		"modifier_prince_of_heart_datadriven"
				"Target"			"TARGET"
			}
		}
		"Modifiers"
		{
			"modifier_prince_of_heart_datadriven"
			{
				"IsDebuff"		"1"
				"ThinkInterval"	"1"
				"OnIntervalThink"
				{
					"Damage"
					{
						"Target"	"TARGET"
						"Type"		"DAMAGE_TYPE_MAGICAL"
						"Damage"	"%dam_per_sec"
					}
				}
				"States"
				{
					"MODIFIER_STATE_STUNNED"	"MODIFIER_STATE_VALUE_ENABLED"
				}
				"OverrideAnimation"	"ACT_DOTA_DISABLED"
			}
		}
	}
}